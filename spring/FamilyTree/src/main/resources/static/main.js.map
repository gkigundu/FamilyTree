{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/register/register.component.css","webpack:///./src/app/components/register/register.component.html","webpack:///./src/app/components/register/register.component.ts","webpack:///./src/app/components/reset-pw/reset-pw.component.css","webpack:///./src/app/components/reset-pw/reset-pw.component.html","webpack:///./src/app/components/reset-pw/reset-pw.component.ts","webpack:///./src/app/models/user.model.ts","webpack:///./src/app/models/userlogin.model.ts","webpack:///./src/app/services/auth-guard.service.ts","webpack:///./src/app/services/auth-redirect.service.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport{ AuthGuardService} from './services/auth-guard.service';\nimport{ AuthRedirectService} from './services/auth-redirect.service';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { ResetPWComponent } from './components/reset-pw/reset-pw.component';\nimport { RegisterComponent } from './components/register/register.component';\n\n// creating our routes \nconst appRoutes: Routes = [\n    //each route has an object, path\n    {path:'', component:LoginComponent,canActivate:[AuthRedirectService]},\n    {path:'login', component:LoginComponent,canActivate:[AuthRedirectService]},\n    {path:'register',  component:RegisterComponent,canActivate:[AuthRedirectService]},\n    {path:'forgotpassword', component:ResetPWComponent},\n    {path:'home', component:HomeComponent, canActivate:[AuthGuardService]}\n  ];\n\n  @NgModule({\n  imports: [RouterModule.forRoot(appRoutes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }","module.exports = \"h1 {\\n    font-size: 50px;\\n    margin: auto;\\n    text-align: center;\\n}\\n\\nimg {\\n    width: 100%;\\n    height: auto;\\n}\\n\\n.container {\\n    width: 70%;\\n    margin: 2% auto;\\n}\\n\\n/* effective under 1200px */\\n\\n@media(max-width: 1200px) {\\n    .container {\\n        width: 100%;\\n    }\\n    h1 {\\n        font-size: 40px;\\n    }\\n}\\n\\n/* effective under between 900px to 450px */\\n\\n@media(max-width: 900px) and (min-width: 450px) {\\n    .container {\\n        width: 100%;\\n    }\\n\\n    h1 {\\n        font-size: 30px;\\n    }\\n}\\n\\n/* effective under 450px */\\n\\n@media(max-width: 450px) {\\n    .container {\\n        width: 100%;\\n    }\\n\\n    h1 {\\n        font-size: 17px;\\n    }\\n}\\n\"","module.exports = \"<!-- <app-navbar></app-navbar>\\n\\n\\n  <div class=\\\"container\\\">\\n    <h1 >\\n      Welcome to {{ title }}!\\n    </h1>\\n  </div>\\n  <div class=\\\"container\\\">\\n    <img src=\\\"assets/images/beachFamily.jpg\\\" />\\n  </div>\\n\\n  <app-user></app-user> -->\\n\\n  <app-navbar></app-navbar>\\n  <router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  \n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n// importing FormsModule for two-way data binding to form elements: ngModel\nimport { FormsModule } from '@angular/forms';\n// importing routermodule and routes module for using different urls for different pages\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { ResetPWComponent } from './components/reset-pw/reset-pw.component';\nimport { RegisterComponent } from './components/register/register.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    HomeComponent,\n    ResetPWComponent,\n    RegisterComponent\n    \n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"h1 {\\n    font-size: 50px;\\n    margin: auto;\\n    text-align: center;\\n}\\n\\nimg {\\n    width: 100%;\\n    height: auto;\\n}\\n\\n.container {\\n    width: 70%;\\n    margin: 2% auto;\\n}\\n\\n/* effective under 1200px */\\n\\n@media(max-width: 1200px) {\\n    .container {\\n        width: 100%;\\n    }\\n    h1 {\\n        font-size: 40px;\\n    }\\n}\\n\\n/* effective under between 900px to 450px */\\n\\n@media(max-width: 900px) and (min-width: 450px) {\\n    .container {\\n        width: 100%;\\n    }\\n\\n    h1 {\\n        font-size: 30px;\\n    }\\n}\\n\\n/* effective under 450px */\\n\\n@media(max-width: 450px) {\\n    .container {\\n        width: 100%;\\n    }\\n\\n    h1 {\\n        font-size: 17px;\\n    }\\n}\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <h1 >\\n    Welcome to {{ title }}!\\n  </h1>\\n</div>\\n<div class=\\\"container\\\">\\n  <img src=\\\"assets/images/beachFamily.jpg\\\" />\\n  {{user}}\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../../services/user.service';\nimport { User } from '../../models/user.model';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  private user: User;\n\n  constructor(\n    private userService: UserService\n  ) { }\n\n  ngOnInit() {\n    this.user = JSON.parse(this.userService.persistGetUser());\n  }\n\n}\n","module.exports = \"h1 {\\n    text-align: center;\\n}\\n\\n.content {\\n    width: 30%;\\n    min-width: 150px;\\n    margin: auto;\\n    margin-top: 5%;\\n    border: 5px solid;\\n    border-radius: 10px;\\n    padding: 3%;\\n}\\n\\n.form-group{\\n    width: 80%;\\n    min-width: 130px;\\n    margin: auto;\\n    margin-right :5%;\\n    margin-top: 5%;\\n}\\n\\nlabel{    \\n    width: 80%;\\n    min-width: 110px;\\n    display: block;\\n}\\n\\nbutton {    \\n    width: 80%;\\n    min-width: 110px;\\n    display: block;\\n    margin-right :5%;\\n    margin-top: 5%;\\n    white-space: normal;\\n}\"","module.exports = \"<h1>Welcome to FamilyTree!</h1>\\n\\n    <div class=\\\"content\\\">\\n     \\n       <form class=\\\"form\\\">\\n           <div class=\\\"form-group\\\">\\n              \\n              <label for=\\\"username\\\">Username: </label>\\n              <input class=\\\"form-control\\\" [(ngModel)]=\\\"username\\\" id=\\\"username\\\" type=\\\"text\\\" placeholder=\\\"email\\\" name=\\\"username\\\" ng-required=\\\"required\\\">\\n         \\n              <label for=\\\"password\\\">Password: </label>\\n              <input class=\\\"form-control\\\" [(ngModel)]=\\\"password\\\" id=\\\"password\\\" type=\\\"password\\\" placeholder=\\\"password\\\" name=\\\"password\\\" ng-required=\\\"required\\\">\\n           </div>\\n            \\n            <div class=\\\"form-group\\\">\\n                <button class=\\\"btn btn-primary\\\" id=\\\"login\\\" (click)=\\\"login()\\\" type=\\\"submit\\\">Login</button>\\n                <button class=\\\"btn\\\"  id=\\\"register\\\" [routerLink]=\\\"['/register']\\\" >Register</button>\\n                <button class=\\\"btn\\\" id=\\\"resetPW\\\" [routerLink]=\\\"['/forgotpassword']\\\">Forgot Password</button>\\n            </div>     \\n       </form>\\n     </div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from '../../services/user.service';\nimport {AuthService} from '../../services/auth.service';\nimport { UserLogin } from '../../models/userlogin.model';\nimport {User} from '../../models/user.model';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  private username:string;\n  private password:string;\n  constructor(\n    private router:Router,\n    private auth: AuthService,\n    private userService: UserService\n  ) { }\n\n  ngOnInit() {  }\n\n  login() {\n    let userLogin: UserLogin = new UserLogin();\n    this.userService.login(userLogin).subscribe(\n      resp=>{\n        let respJSON = JSON.parse(resp['body']);\n        if(resp['status'] == 202){\n            //user successfully logged in\n            //storing data in cache obserable\n            let newUser = new User();\n            newUser.$setAll(respJSON);\n            this.userService.persistSetUser(newUser);\n            this.router.navigate(['home']);\n        }\n    },\n    err=>{\n        alert(\"Wrong Password!\");\n        console.log(err.status);\n    });\n  }\n\n}\n","module.exports = \"/* .fix-me {\\n    position: fixed;\\n} */\\n\\n.navbar-brand, .nav-link {\\n    font-size: 30px;\\n}\\n\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light fix-me\\\">\\n  <a class=\\\"navbar-brand \\\" routerLink=\\\"/\\\">Family Tree</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNav\\\" aria-controls=\\\"navbarNav\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNav\\\">\\n      <ul class=\\\"navbar-nav \\\">\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" id=\\\"signOutBtn\\\" routerLink=\\\"/\\\">Home</a>\\n          </li>\\n          </ul>\\n    <ul class=\\\"navbar-nav \\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" id=\\\"signOutBtn\\\" routerLink=\\\"/home\\\">Profile</a>\\n      </li>\\n      </ul>\\n    <ul class=\\\"navbar-nav ml-auto\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" id=\\\"signOutBtn\\\" routerLink=\\\"/login\\\" (click)=\\\"logout()\\\">Sign Out</a>\\n      </li>\\n      \\n    </ul>\\n  </div>\\n</nav>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { UserService } from '../../services/user.service'\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(\n    private auth:AuthService,\n    private router:Router,\n    private user: UserService\n  ) { }\n\n  ngOnInit() {\n  }\n  logout(){\n    this.auth.deleteToken();\n    this.user.persistRemoveUser();\n    this.router.navigate(['login'])\n  }\n}\n","module.exports = \"\"","module.exports = \"<h1>Register</h1>\\n<div class=\\\"content\\\">\\n     \\n    <form class=\\\"form\\\">\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"email\\\">Email: </label>\\n            <input class=\\\"form-control\\\" [(ngModel)]=\\\"email\\\" id=\\\"email\\\" type=\\\"email\\\" placeholder=\\\"Email\\\" name=\\\"email\\\" required>\\n\\n           <label for=\\\"username\\\">Username: </label>\\n           <input class=\\\"form-control\\\" [(ngModel)]=\\\"username\\\" id=\\\"username\\\" type=\\\"text\\\" placeholder=\\\"Username\\\" name=\\\"username\\\" required>\\n      \\n           <label for=\\\"password\\\">Password: </label>\\n           <input class=\\\"form-control\\\" [(ngModel)]=\\\"password\\\" id=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\" required>\\n        </div>\\n         \\n         <div class=\\\"form-group\\\">\\n             <button class=\\\"btn btn-primary\\\" id=\\\"register\\\" (click)=\\\"register()\\\" type=\\\"submit\\\">Register</button>\\n         </div>     \\n    </form>\\n  </div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../../services/user.service';\nimport { UserLogin } from '../../models/userlogin.model';\nimport { Router } from '../../../../node_modules/@angular/router';\nimport { User } from '../../models/user.model';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  private username:string;\n  private password:string;\n  private email:string;\n  constructor(\n    private userService:UserService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n  }\n  public register(){\n    let userLogin: UserLogin = new UserLogin();\n    userLogin.$email=this.email;\n    userLogin.$username=this.username;\n    userLogin.$password=this.password;\n    this.userService.register(userLogin).subscribe(\n      resp=>{\n        console.log(\"Entering registerComponent.register.resp\")\n        console.log(\"response is \" + JSON.stringify(resp));\n        let respJSON = JSON.parse(resp['body']);\n        console.log(\"respJSON is \" + respJSON)\n        if(resp['status'] == 202){\n            let newUser = new User();\n            newUser.$setAll(respJSON);\n            this.userService.persistSetUser(newUser);\n            this.router.navigate(['home']);\n        }\n        console.log(\"Exiting registerComponent.register.resp\")\n      },\n      err=>{\n        console.log(\"Entering registerComponent.register.err\")\n          alert(\"Unable to register!\");\n          console.log(err.status);\n          console.log(\"Exitin registerComponent.register.err\")\n      }\n    );\n  }\n}\n","module.exports = \"\"","module.exports = \"<h1>Reset Password</h1>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-reset-pw',\n  templateUrl: './reset-pw.component.html',\n  styleUrls: ['./reset-pw.component.css']\n})\nexport class ResetPWComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export class User{\n    //user fields\n    private userID:number;\n    private email:string;\n    private phoneNumber:number;\n    private firstName:string;\n    private lastName:string;\n    private location:string;\n    private age:number;\n    //soon to come\n    //private profilePic:Blob;\n    public $setAll(newUser:User){\n        this.userID=newUser.$userID;\n        this.email=newUser.$email;\n    }\n    public set $userID(value:number){\n        this.userID=value;\n    }\n    public get $userID(){\n        return this.userID;\n    }\n    public set $email(value:string){\n        this.email=value;\n    }\n    public get $email(){\n        return this.email;\n    }\n    public set $phoneNumber(value:number){\n        this.phoneNumber=value;\n    }\n    public get $phoneNumber(){\n        return this.phoneNumber;\n    }\n    public set $firstName(value:string){\n        this.firstName=value;\n    }\n    public get $firstName(){\n        return this.firstName;\n    }\n    public set $lastName(value:string){\n        this.lastName=value;\n    }\n    public get $lastName(){\n        return this.lastName;\n    }\n    /*\n    public set $location(value:string){\n        this.location=value;\n    }\n    public get $location(){\n        return this.location;\n    }\n    public set $age(value:number){\n        this.age=value;\n    }\n    public get $age(){\n        return this.age;\n    }\n    public set $profilePic(value:Blob){\n\n    }\n    public get $profilePic(){\n        return this.profilePic;\n    }\n    */\n}","export class UserLogin{\n    private username:string;\n    private password:string;\n    private email:string;\n    //private phoneNumber:number;\n\n    constructor(){}\n\n    public $setAll(newUser:UserLogin){\n        this.username=newUser.$username;\n        this.password=newUser.$password;\n        this.email=newUser.$email;\n        //this.phoneNumber=newUser.$phoneNumber;\n    }\n    public set $username(value:string){\n        this.username=value;\n    }\n    public get $username(){\n        return this.username;\n    }\n    public set $password(value:string){\n        this.password=value;\n    }\n    public get $password(){\n        return this.password;\n    }\n    public set $email(value:string){\n        this.email=value;\n    }\n    public get $email(){\n        return this.email;\n    }/*\n    public set $phoneNumber(value:number){\n        this.phoneNumber=value;\n    }\n    public get $phoneNumber(){\n        return this.phoneNumber;\n    }*/\n}","import { Injectable } from '@angular/core';\nimport {AuthService} from './auth.service';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate {\n\n  constructor(\n    private router:Router,\n    private authService:AuthService\n  ) { }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> | Promise<boolean> | boolean {\n    if(this.authService.checkToken()){\n        return true;\n    }\n    this.router.navigate(['login']);\n    alert(\"Login required\");\n    return false;\n}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AuthService } from './auth.service';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthRedirectService implements CanActivate {\n\n  constructor(\n    private router:Router,\n    private authService:AuthService\n  ) { }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> | Promise<boolean> | boolean {\n    if(this.authService.checkToken()){\n        this.router.navigate(['home']);\n        return false;\n    }\n    \n    return true;\n}\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Token } from '../../../node_modules/@angular/compiler';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  \n  constructor() { }\n  setToken(newToken:string){\n    localStorage.setItem('Token',newToken);\n  }\n\n  getToken():string{\n    console.log(localStorage.getItem('Token'));\n    return localStorage.getItem('Token');\n  }\n  deleteToken(){\n    localStorage.removeItem('Token');\n  }\n  appendToken(url:string):string{\n    return url + \"?token=\" +this.getToken();\n  }\n  checkToken():boolean{\n    if(this.getToken() != null){\n      console.log('token not null');\n        return true;\n    }\n    else\n        return false;\n}\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { User } from '../models/user.model';\nimport { UserLogin } from '../models/userlogin.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  private userUrl:string  = \"http://localhost:8080/familytree/user\";\n  private loginUrl:string  = \"http://localhost:8080/familytree/login\";\n  private header = {\n    headers:new HttpHeaders({\n        ContentType:'application/json',\n        responseType:'application/json',\n        observe:'response'\n    })\n}\n  constructor(\n      private htttpClient:HttpClient\n    ) { }\n\npublic register(newUserLogin:UserLogin){\n    console.log(\"Entering userService.register\")\n      console.log(newUserLogin);\n      let tempUrl=this.loginUrl + '/add';\n      const requestBody = newUserLogin;\n      console.log(\"Exiting userService.register\")\n      return this.htttpClient.post(tempUrl,requestBody,this.header);\n  }\n  public login(userLogin:UserLogin){\n    let tempUrl=this.loginUrl + '/login';\n    const requestBody =  JSON.stringify(userLogin);\n    console.log(requestBody);\n    return this.htttpClient.post(tempUrl,requestBody,this.header);\n  }\n  public persistSetUser(user:User){\n      localStorage.setItem('User', JSON.stringify(user));\n  }\n  public persistCheckUser(){\n      if(localStorage.getItem('User') != null)\n          return true;\n      else\n        return false;\n  }\n  public persistRemoveUser(){\n      localStorage.removeItem('User');\n  }\n  public persistGetUser(){\n    return localStorage.getItem('User');\n}\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\nconst server:string = 'http://localhost:8080';\nexport const environment = {\n  production: false,\n  server: server,\n  user:{\n    getAllUsers: () => `${server}/user/all`,\n    getUserByID:(value: number) => `${server}/user/id/${value}`,\n    getUserByEmail:(value:string) => `${server}/user/email/${value}`,\n    getUsersByFirstname:(value:string) => `${server}/user/firstname/${value}`,\n    getUsersByLaststname:(value:string) => `${server}/user/lastname/${value}`\n  },\n  userLogin:{\n    getLoginByEmail:(value:string) => `${server}/user/email/${value}`,\n    getLoginByUsername:(value:string) => `${server}/userlogin/username/${value}`,\n  },\n  userFamily:{\n    getFamilyByUserID: (value:string) => `${server}/user/id/${value}`\n  }\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}